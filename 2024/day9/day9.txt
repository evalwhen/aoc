---

### --- 第 9 天：磁盘碎片整理程序 ---

又一次按下按钮，你发现自己身处一些友好的两栖类生物（amphipods）熟悉的走廊里！好在你们每个人都 somehow 得到了一艘自己的迷你潜水艇。历史学家们驾驶着潜艇飞速离开去寻找首领，主要是通过直接撞墙的方式。

当历史学家们迅速搞清楚如何驾驶这些东西时，你注意到角落里有一只两栖类生物正为他的电脑犯愁。他正试图通过整理（compacting）所有文件来创造更多连续的可用空间，但他的程序不工作；你主动提出帮忙。

他向你展示了他已经生成的磁盘映射（disk map，即你的谜题输入）。例如：

`2333133121414131402`

磁盘映射使用一种紧凑格式（dense format）来表示磁盘上文件和可用空间的布局。数字交替指示文件长度和可用空间长度。

所以，像 `12345` 这样的磁盘映射代表一个长度为1个区块的文件，接着是2个区块的可用空间，一个3个区块的文件，4个区块的可用空间，然后是一个5个区块的文件。而像 `90909` 这样的磁盘映射则代表三个长度为9个区块的文件连续排列（它们之间没有可用空间）。

磁盘上的每个文件还有一个基于它们在重新排列前出现顺序的ID号，从ID 0开始。所以，磁盘映射 `12345` 有三个文件：一个1区块的文件，ID为0；一个3区块的文件，ID为1；以及一个5区块的文件，ID为2。如果用一个字符代表一个区块，其中数字是文件ID，`.` 代表可用空间，那么磁盘映射 `12345` 表示的单个区块就是：

`0..111....22222`

上面给出的第一个例子，`2333133121414131402`，表示的单个区块是：

`00...111...2...333.44.5555.6666.777.888899`

这位两栖类生物希望一次移动一个文件区块，从磁盘的**末尾**移动到**最左边的可用空间区块**（直到文件区块之间不再有间隙为止）。对于磁盘映射 `12345`，过程如下所示：

`0..111....22222`
`02.111....2222.`
`022111....222..`
`0221112...22...`
`02211122..2....`
`022111222......`

第一个例子需要更多步骤：

`00...111...2...333.44.5555.6666.777.888899`
`009..111...2...333.44.5555.6666.777.88889.`
`0099.111...2...333.44.5555.6666.777.8888..`
`00998111...2...333.44.5555.6666.777.888...`
`009981118..2...333.44.5555.6666.777.88....`
`0099811188.2...333.44.5555.6666.777.8.....`
`009981118882...333.44.5555.6666.777.......`
`0099811188827..333.44.5555.6666.77........`
`00998111888277.333.44.5555.6666.7.........`
`009981118882777333.44.5555.6666...........`
`009981118882777333644.5555.66.............`
`00998111888277733364465555.66.............`
`0099811188827773336446555566..............`

这个文件整理过程的最后一步是更新文件系统校验和（filesystem checksum）。要计算校验和，需要将每个区块的**位置**与其包含的**文件ID号**相乘，然后将所有结果相加。最左边的区块位置为0。如果一个区块是可用空间，则跳过它。

继续第一个例子，前几个区块的位置乘以其文件ID号的结果是：$0 \times 0 = 0$，$1 \times 0 = 0$，$2 \times 9 = 18$，$3 \times 9 = 27$，$4 \times 8 = 32$，依此类推。在这个例子中，校验和是这些值的总和，即 **1928**。

请使用他要求的过程来整理这位两栖类生物的硬盘。最终的文件系统校验和是多少？（小心复制/粘贴这个谜题的输入；它是一整行非常长的文本。）

--- 第二部分 ---

完成后，有两件事立刻变得清晰起来。第一，磁盘确实有了更多连续的可用空间，正如那只两栖类生物所希望的。第二，电脑运行得慢多了！也许之前整理文件的方式是个坏主意？

这只热切的两栖类生物已经有了一个新计划：他不想再移动单个区块了，而是想通过移动整个文件来整理他磁盘上的文件。

这一次，尝试将整个文件移动到能够容纳该文件的最左侧的连续可用空间区域。尝试按文件ID号降序，从ID号最高的文件开始，将每个文件恰好移动一次。如果一个文件的左侧没有足够大的可用空间区域来容纳该文件，则该文件不移动。

上面给出的第一个例子现在会按不同的方式进行：

00...111...2...333.44.5555.6666.777.888899
0099.111...2...333.44.5555.6666.777.8888..
0099.1117772...333.44.5555.6666.....8888..
0099.111777244.333....5555.6666.....8888..
00992111777.44.333....5555.6666.....8888..

更新文件系统校验和的过程是相同的；现在，这个例子的校验和将是 2858。

从头开始，现在改用这种新方法来整理两栖类生物的硬盘。最终的文件系统校验和是多少？
